# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

platform :ios do
  desc "Build & deploy the iOS app to App Store Connect"
  lane :build_deploy do
    load_asc_api_key
    fetch_and_increment_build_number
    prepare_signing(adhoc: false)
    build_release
    upload_release
  end

  lane :load_asc_api_key do
    app_store_connect_api_key(
      key_id: ENV["ASC_KEY_ID"],
      issuer_id: ENV["ASC_ISSUER_ID"],
      key_content: ENV["ASC_KEY"],
      in_house: false # detecting this via ASC private key not currently supported
    )
  end

  desc "Fetches the latest version & build number from App Store Connect, increments build number by one"
  lane :fetch_and_increment_build_number do
    app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
    api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

    current_version = get_version_number
    latest_build_number = latest_testflight_build_number(
      api_key: api_key,
      version: current_version,
      app_identifier: app_identifier
    )

    updated_build_number = latest_build_number + 1

    increment_build_number(
      build_number: updated_build_number
    )
  end

  desc "Installs signing certificate in the keychain and downloads provisioning profiles from App Store Connect"
  lane :prepare_signing do |options|
    team_id = CredentialsManager::AppfileConfig.try_fetch_value(:team_id)
    api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

    keychain_name = "signing"
    keychain_password = "temp"

    delete_keychain(
      name: keychain_name
    ) if File.exist? File.expand_path("~/Library/Keychains/#{keychain_name}-db")

    create_keychain(
      name: keychain_name,
      password: keychain_password,
      default_keychain: true,
      unlock: true,
      timeout: 3600
    )

    import_certificate(
      certificate_path: ENV["SIGNING_KEY_FILE_PATH"],
      certificate_password: ENV["SIGNING_KEY_PASSWORD"],
      keychain_name: keychain_name,
      keychain_password: keychain_password
    )

    # fetches and installs provisioning profiles from ASC
    sigh(
      adhoc: options[:adhoc],
      api_key: api_key, 
      readonly: true
    )
  end

  desc "Builds the iOS app for release"
  lane :build_release do
    identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
    team_id = CredentialsManager::AppfileConfig.try_fetch_value(:team_id)

    profile_name = "{{ provisioning_profile_name }}"

    # temporarily updates code signing settings on xcodeproject to ensure correct mapping of configurations for distribution build
    update_code_signing_settings(
      use_automatic_signing: false,
      team_id: team_id,
      targets: ["iosApp"], # all targets to update code signing settings for
      code_sign_identity: "{{ code_signing_identity }}", # name of certificate included in the provisioning profile
      profile_name: profile_name,
      bundle_identifier: identifier,
      build_configurations: ["Debug"] # the release build configuration
    )

    gym(
      {{ workspace_parameter }} # workspace: "/path/to/workspace",
      scheme: "iosApp",
      configuration: "Debug",
      export_method: "app-store", # options are app-store, ad-hoc, package, enterprise, development, validation, developer-id and mac-application
      export_options: {
        provisioningProfiles: {
          identifier => profile_name,
          #any additional bundle identifiers being included in the build can be added here
        }
      }
    )
  end

  desc "Uploads .ipa to App Store Connect"
  lane :upload_release do
    api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

    deliver(
        api_key: api_key,
        skip_screenshots: true,
        skip_metadata: true,
        force: true,
        run_precheck_before_submit: false # not supported through ASC API yet
    )
  end
end
